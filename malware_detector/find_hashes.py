import hashlib
import os


def get_md5(filepath):
    """Calculates the MD5 hash of a file."""
    hash_md5 = hashlib.md5()
    try:
        with open(filepath, "rb") as f:
            for chunk in iter(lambda: f.read(4096), b""):
                hash_md5.update(chunk)
        return hash_md5.hexdigest()
    except Exception as e:
        print(f"Could not read file {filepath}: {e}")
        return None


# --- Calculate Hashes (Run this once locally to get the values) ---
# Create the dummy files first in scan_target/
base_path = "scan_target"
files_to_hash = ["bad_file_1.txt", "bad_file_2.exe", "good_file.txt"]

for filename in files_to_hash:
    path = os.path.join(base_path, filename)
    if os.path.exists(path):
        print(f"{filename}: {get_md5(path)}")
    else:
        print(f"{filename}: Does not exist at {path}")


print(
    hashlib.md5(
        b"This content is designed to match a specific known bad hash for testing. Tool ID: KGen4815162342"
    ).hexdigest()
)
# --- End Hash Calculation ---
